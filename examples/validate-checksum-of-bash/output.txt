Building dresponse
Step 1 : FROM jizhilong/docker-wait
 ---> 6881b77b73dd
Step 2 : ADD dresponse.cfg /etc/docker-wait/dresponse.cfg
 ---> Using cache
 ---> b7906f7ecb90
Step 3 : ADD scripts /var/lib/docker-wait/prestart
 ---> Using cache
 ---> ea8b761cf8b3
Successfully built ea8b761cf8b3
Recreating validatechecksumofbash_dresponse_1
Recreating validatechecksumofbash_normal-container_1
Attaching to validatechecksumofbash_dresponse_1, validatechecksumofbash_normal-container_1
[36mdresponse_1         |[0m *** Starting uWSGI 2.0.15 (64bit) on [Thu May  4 02:08:08 2017] ***
[36mdresponse_1         |[0m compiled with version: 4.9.2 on 03 May 2017 15:14:21
[36mdresponse_1         |[0m os: Linux-3.13.0-45-generic #74-Ubuntu SMP Tue Jan 13 19:36:28 UTC 2015
[36mdresponse_1         |[0m nodename: jzl-dev005
[36mdresponse_1         |[0m machine: x86_64
[36mdresponse_1         |[0m clock source: unix
[36mdresponse_1         |[0m pcre jit disabled
[36mdresponse_1         |[0m detected number of CPU cores: 2
[36mdresponse_1         |[0m current working directory: /
[36mdresponse_1         |[0m detected binary path: /usr/local/bin/uwsgi
[36mdresponse_1         |[0m uWSGI running as root, you can use --uid/--gid/--chroot options
[36mdresponse_1         |[0m *** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
[36mdresponse_1         |[0m *** WARNING: you are running uWSGI without its master process manager ***
[36mdresponse_1         |[0m your processes number limit is 524288
[36mdresponse_1         |[0m your memory page size is 4096 bytes
[36mdresponse_1         |[0m detected max file descriptor number: 524288
[36mdresponse_1         |[0m lock engine: pthread robust mutexes
[36mdresponse_1         |[0m thunder lock: disabled (you can enable it with --thunder-lock)
[36mdresponse_1         |[0m uwsgi socket 0 bound to UNIX address /var/run/dwait/dwait.sock fd 3
[36mdresponse_1         |[0m Python version: 2.7.13 (default, May  1 2017, 22:44:36)  [GCC 4.9.2]
[36mdresponse_1         |[0m *** Python threads support is disabled. You can enable it with --enable-threads ***
[36mdresponse_1         |[0m Python main interpreter initialized at 0xff12b0
[36mdresponse_1         |[0m your server socket listen backlog is limited to 100 connections
[36mdresponse_1         |[0m your mercy for graceful operations on workers is 60 seconds
[36mdresponse_1         |[0m mapped 72768 bytes (71 KB) for 1 cores
[36mdresponse_1         |[0m *** Operational MODE: single process ***
[36mdresponse_1         |[0m WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0xff12b0 pid: 9 (default app)
[36mdresponse_1         |[0m *** uWSGI is running in multiple interpreter mode ***
[36mdresponse_1         |[0m spawned uWSGI worker 1 (and the only) (pid: 9, cores: 1)
[36mdresponse_1         |[0m lrwxrwxrwx 1 root root 0 May  4 02:08 /hostroot/proc/793/root -> /
[36mdresponse_1         |[0m 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default 
[36mdresponse_1         |[0m     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
[36mdresponse_1         |[0m     inet 127.0.0.1/8 scope host lo
[36mdresponse_1         |[0m        valid_lft forever preferred_lft forever
[36mdresponse_1         |[0m     inet6 ::1/128 scope host 
[36mdresponse_1         |[0m        valid_lft forever preferred_lft forever
[36mdresponse_1         |[0m 670: eth0: <NO-CARRIER,BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state DOWN group default 
[36mdresponse_1         |[0m     link/ether 02:42:ac:14:00:02 brd ff:ff:ff:ff:ff:ff
[36mdresponse_1         |[0m     inet 172.20.0.2/16 scope global eth0
[36mdresponse_1         |[0m        valid_lft forever preferred_lft forever
[36mdresponse_1         |[0m     inet6 fe80::42:acff:fe14:2/64 scope link tentative 
[36mdresponse_1         |[0m        valid_lft forever preferred_lft forever
[36mdresponse_1         |[0m [pid: 9|app: 0|req: 1/1] 0.0.0.0 () {28 vars in 313 bytes} [Thu May  4 02:08:09 2017] POST /init => generated 215 bytes in 54 msecs (HTTP/1.1 200) 2 headers in 72 bytes (2 switches on core 0)
[33mnormal-container_1  |[0m entrypoint: []
[33mnormal-container_1  |[0m command: [echo 33135f5a1fb45f5dff915ec1193c0dc7  /bin/bash|md5sum -c -]
[33mnormal-container_1  |[0m argv: [echo 33135f5a1fb45f5dff915ec1193c0dc7  /bin/bash|md5sum -c -]
[33mnormal-container_1  |[0m path: /bin/echo
[33mnormal-container_1  |[0m 33135f5a1fb45f5dff915ec1193c0dc7  /bin/bash|md5sum -c -
[33mvalidatechecksumofbash_normal-container_1 exited with code 0
[0mStopping validatechecksumofbash_dresponse_1 ... 
[1A[2KStopping validatechecksumofbash_dresponse_1 ... done[1BAborting on container exit...
